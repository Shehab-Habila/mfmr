% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smart_search.R
\name{smart_search}
\alias{smart_search}
\title{A Smart Function that Returns All Matches of a String within a Vector, Sorted According to the Quality of the Match}
\usage{
smart_search(
  terget_string,
  ref_vector,
  min_word_matches = 0.3,
  fuzzy = TRUE,
  char_range = 2
)
}
\arguments{
\item{terget_string}{The target string you are looking for.}

\item{ref_vector}{The vector to look into.}

\item{min_word_matches}{The minimum percentage of words to be matched in order to consider the case a match. Default is 0.3.}

\item{fuzzy}{A logical value determining whether fuzzy matching is used or not. Default is TRUE.}

\item{char_range}{The maximum tolerated number of added or removed characters in the reference word. Default is 2.}
}
\value{
A dataframe containing the indices, scores, and text of the matched elements in the reference vector.
}
\description{
This function searches for a target string within a reference vector, allowing for optional fuzzy matching.
It returns all matches sorted by the quality of the match, which is calculated based on several factors including
the percentage of words matched, the accuracy of individual word matches, and the continuity of the matched words.
}
\examples{
ref_vector <- c("This is a sample text", "Another example here", "More text to match")
terget_string <- "sample text"
smart_search(terget_string, ref_vector, min_word_matches = 0.5, fuzzy = TRUE, char_range = 0)

}
