% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unite_within_columns.R
\name{unite_within_columns}
\alias{unite_within_columns}
\title{Unite Variations of Strings Within Specific Columns in a Table}
\usage{
unite_within_columns(
  table,
  columns_names,
  target_values,
  unite_to,
  fuzzy = TRUE,
  char_range = 1
)
}
\arguments{
\item{table}{The dataframe in which variations of strings will be united.}

\item{columns_names}{A vector of column names where the variations will be united.}

\item{target_values}{A vector of variations that will be united. If \code{fuzzy} is TRUE, you can provide a smaller set of variations as the function will use fuzzy matching to recognize similar strings.}

\item{unite_to}{The final standardized form to which all variations will be united.}

\item{fuzzy}{When TRUE, fuzzy matching is used to recognize variations. Default is TRUE.}

\item{char_range}{The maximum tolerated number of added or removed characters for fuzzy matching. Default is 1.}
}
\value{
The dataframe with variations of strings united in the specified columns according to the given parameters.
}
\description{
This function unites all variations of specific strings within selected columns of a dataframe to avoid minor misspellings and ensure consistency for statistical analysis. Variations can be united using fuzzy matching if enabled.
}
\examples{
# Sample dataframe
df <- data.frame(Name = c("Jonh Doe", "John Doe", "Jon Doe", "Jane Doe"),
                 Address = c("123 Main St", "124 Main St", "123 Main Steet", "125 Main St"))

# Unite variations of "John Doe" and "Main Steet" into standardized forms
df_united <- unite_within_columns(df,
                                   columns_names = c("Name", "Address"),
                                   target_values = c("Jonh Doe", "John Doe", "Jon Doe"),
                                   unite_to = "John Doe",
                                   fuzzy = TRUE)

}
